.grow-0{
    flex-grow: 0;
}

.grow-1{
    flex-grow: 1;
}

.grow-2{
    flex-grow: 2;
}

.grow-3{
    flex-grow: 3;
}

/* A propriedade grow vai definir o espaço que o elemento filho vai preencher dentro do elemento pai. Assim o que tiver o grow maior vai dispor de um espaço maior no container, caso todos tenham o mesmo tamanho eles vão dispor de tamanhos iguais */
/* No caso de uso de grow o justify content não vai funcionar devido o grow já ocupar todo o espaço do container */

.basis-auto{
    flex-basis: auto;
}

.basis-0{
    flex-basis: 0;
}

.basis-100{
    flex-basis: 100px;
}

.basis-200{
    flex-basis: 200px;
}

.basis-300{
    flex-basis: 300px;
}

/* A propriedade flex basis vai definir um valor inicial para o item filho, esse tamanho pode ser alterado dependendo de outras propriedades, podendo assim crescer ou encolher conforme a necessidade de ajuste do layout */

.shrink-0{
    flex-shrink: 0;
}

.shrink-1{
    flex-shrink: 1;
}

.shrink-2{
    flex-shrink: 2;
}

.shrink-3{
    flex-shrink: 3;
}

/* A propriedade flex-shrink define a capacidade de um item flexível de encolher quando o espaço no contêiner pai é insuficiente para acomodar todos os itens flexíveis. O valor de flex-shrink é um número que indica a proporção de encolhimento do item em relação aos outros itens no mesmo contêiner. */